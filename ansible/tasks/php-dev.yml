---

# - name: Check that launch agents folder exists
- file:
    path={{ ansible_env.HOME }}/Library/LaunchAgents/
    owner={{ ansible_env.USER }}
    group=staff
    state=directory

### dnsmasq ###################################################################
# Used to provide local dns for your domian, e.g. oliver.dev
- homebrew:
    name=dnsmasq
    state=present
- template:
    src={{ ansible_env.HOME }}/.dotfiles/ansible/etc/dnsmasq.conf
    dest=/usr/local/etc/dnsmasq.conf
    owner={{ ansible_env.USER }}
    group=admin
    mode=0766
- file: path=/etc/resolver owner=root group=wheel state=directory
  sudo: yes
  sudo_user: "{{ ansible_env.USER }}"
- shell: sudo bash -c 'echo "nameserver 127.0.0.1" > /etc/resolver/oliver.dev'
- shell: sudo rm /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
  ignore_errors: true
- shell: sudo cp -f /usr/local/opt/dnsmasq/homebrew.mxcl.dnsmasq.plist /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
- shell: sudo chown root /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
- shell: sudo chgrp wheel /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
- shell: sudo chmod 0744 /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
- shell: launchctl unload /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
  sudo: yes
  sudo_user: "{{ ansible_env.USER }}"
- shell: launchctl load /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
  sudo: yes
  sudo_user: "{{ ansible_env.USER }}"

### php55 ######################################################################
- homebrew: name=php55 install_options="without-apache,with-fpm,with-mysql" state=present
- shell: ln -sfv /usr/local/opt/php55/homebrew.mxcl.php55.plist ~/Library/LaunchAgents
- shell: launchctl unload -w {{ ansible_env.HOME }}/Library/LaunchAgents/homebrew.mxcl.php55.plist
  ignore_errors: true
- shell: launchctl load -w {{ ansible_env.HOME }}/Library/LaunchAgents/homebrew.mxcl.php55.plist

### mysql ######################################################################
- homebrew: name=mysql state=present
- shell: ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
- shell: launchctl unload -w {{ ansible_env.HOME }}/Library/LaunchAgents/homebrew.mxcl.mysql.plist
  ignore_errors: true
- shell: launchctl load -w {{ ansible_env.HOME }}/Library/LaunchAgents/homebrew.mxcl.mysql.plist
# User: root
# Pass: <none>


### nginx #####################################################################
- homebrew: name=nginx state=present
- file:
    path={{ ansible_env.HOME }}/Code
    owner={{ ansible_env.USER }}
    group=staff
    state=directory
- stat: path={{ ansible_env.HOME }}/Code/index.php
  register: index_exists
- file:
    path={{ ansible_env.HOME }}/Code/index.php
    state=touch
  when: not index_exists.stat.exists
- file:
    path=/usr/local/etc/nginx/sites/
    owner={{ ansible_env.USER }}
    group=admin
    state=directory
- template:
    src={{ ansible_env.HOME }}/.dotfiles/ansible/etc/nginx/nginx.conf
    dest=/usr/local/etc/nginx/nginx.conf
    owner={{ ansible_env.USER }}
    group=admin
    mode=0744
- template:
    src={{ ansible_env.HOME }}/.dotfiles/ansible/etc/nginx/sites/oliver.dev.conf
    dest=/usr/local/etc/nginx/sites/{{ local_dev_hostname }}.conf
    owner={{ ansible_env.USER }}
    group=admin
    mode=0744
- file:
    path=/usr/local/etc/nginx/logs
    owner={{ ansible_env.USER }}
    group=admin
    state=directory
- file:
    path=/usr/local/etc/nginx/logs/error.log
    owner={{ ansible_env.USER }}
    group=admin
    state=touch
- shell: sudo rm /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
- shell: sudo cp -f /usr/local/opt/nginx/homebrew.mxcl.nginx.plist /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
- shell: sudo chown root /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
- shell: sudo chgrp wheel /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
- shell: sudo chmod 0766 /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
- shell: launchctl unload /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
  sudo: yes
  sudo_user: "{{ ansible_env.USER }}"
- shell: launchctl load /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
  sudo: yes
  sudo_user: "{{ ansible_env.USER }}"
- shell: "/usr/bin/curl -ILs http://www.{{ local_dev_hostname }} | head -n 1"
  register: nginx_status
  failed_when: "'200 OK' not in nginx_status.stdout"
