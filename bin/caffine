#!/usr/bin/env bash

# TODO TODO TODO TODO TODO TODO TODO TODO
# Store the unixtimestamp in /tmp/caffine-revert-state-after.txt
# -m minutes - used to create the revert after state. This is checked everytime this script runs with -s

set -Eeuo pipefail

CAFFINATED_PID_FILE=/tmp/caffine.pid
CAFFINATED_TIME_FILE=/tmp/caffine-revert-state-after.txt

usage() {
    cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-s] [-a] [-d] -t minutes

Used to allow the machine to go into sleep or not.

Available options:

-h, --help              Print this help and exit
-v, --verbose           Print script debug info
-s, --status            Show status, either "not caffinated" or "caffinated"
-i, --i3blocks-status   Show status, formatted for i3blocks
-a, --allow-sleep
-d, --disable-sleep
-t, --toggle-sleep      Toggle the state
-m, --minutes <value>   Amount of time (minutes) to keeps this state before
                        automatically switching to the other state
EOF
    exit
}

parse_params() {
    # default values of variables set from params
    get_status=0
    get_i3blocks_status=0
    allow_sleep=0
    disable_sleep=0
    toggle_sleep=0
    minutes=0

    while :; do
        case "${1-}" in
        -h | --help) usage ;;
        -v | --verbose) set -x ;;
        -s | --status) get_status=1 ;;
        -i | --i3blocks-status) get_i3blocks_status=1 ;;
        -a | --allow-sleep) allow_sleep=1 ;;
        -d | --disable-sleep) disable_sleep=1 ;;
        -t | --toggle-sleep) toggle_sleep=1 ;;
        -m | --minutes)
            minutes="${2-}"
            shift
            ;;
        -?*) die "Unknown option: $1" ;;
        *) break ;;
        esac
        shift
    done

    args=("$@")

    # check required params and arguments
    # [[ -z "${param-}" ]] && echo "Missing required parameter: param" 1>&2 && exit 1
    # [[ ${#args[@]} -eq 0 ]] && echo "Missing script arguments" 1>&2 && exit 1

    return 0
}



caffinated() {
    if [ -f $CAFFINATED_PID_FILE ]; then
        return 1
    else
        return 0
    fi
}

enable_sleep() {
    xautolock -time 15 -locker 'systemctl suspend' -notify 600 &
    echo $! > $CAFFINATED_PID_FILE
    xset s on
    xset s blank
    xset +dpms
}

disable_sleep() {
    kill -15 "$(cat $CAFFINATED_PID_FILE)"
    rm $CAFFINATED_PID_FILE
    xset s off
    xset s noblank
    xset -dpms
}

parse_params "$@"

if [ $get_i3blocks_status -eq 1 ]; then
    ICON="ïž¶"
    if caffinated; then
        COLOUR=#f3f4f5
    else
        COLOUR=#676e7d
    fi

    echo "$ICON"
    echo "$ICON"
    echo "$COLOUR"
    exit 0
fi

if [ $get_status -eq 1 ]; then
    if caffinated; then
        echo "caffinated"
    else
        echo "not caffinated"
    fi
    exit 0
fi

if [ $allow_sleep -eq 1 ]; then
    if caffinated; then
        enable_sleep
    fi
    exit 0
fi

if [ $disable_sleep -eq 1 ]; then
    if ! caffinated; then
        disable_sleep
    fi
    exit 0
fi

if [ $toggle_sleep -eq 1 ]; then
    if caffinated; then
        enable_sleep
    else
        disable_sleep
    fi
    exit 0
fi
